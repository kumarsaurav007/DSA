# Length of Longest Fibonacci Subsequence :-

def lenLongestFibSubseq(self, arr: List[int]) -> int:
        index_map = {num: idx for idx, num in enumerate(arr)}
        n = len(arr)
        dp = {}
        max_len = 0
        
        for j in range(1, n):
            for i in range(j):
                prev = arr[j] - arr[i]
                if prev < arr[i] and prev in index_map:
                    k = index_map[prev]
                    dp[(i, j)] = dp.get((k, i), 2) + 1
                    max_len = max(max_len, dp[(i, j)])
        
        return max_len if max_len >= 3 else 0
