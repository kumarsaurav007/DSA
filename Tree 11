# Subtree of Another Tree :-

def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        if not p and not q:
            return True
        if not p or not q:
            return False
        if p.val != q.val:
            return False
        return self.isSameTree(p.left, q.left) and self.isSameTree(p.right, q.right)

def isSubtree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:
        if subRoot == None:
            return True
        if root == None:
            return False
        if root.val == subRoot.val:
            if self.isSameTree(root, subRoot) == True:
                return True
        return self.isSubtree(root.left, subRoot) or self.isSubtree(root.right, subRoot)
