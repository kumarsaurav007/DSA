# Split Linked List in Parts :-

def splitListToParts(self, head: Optional[ListNode], k: int) -> List[Optional[ListNode]]:
        length = 0
        curr = head
        while curr:
            length += 1
            curr = curr.next
        
        part_size = length // k
        remainder = length % k

        res = []
        curr = head
        for i in range(k):
            part_head = curr
            current_part_size = part_size + (1 if i < remainder else 0)
            for j in range(current_part_size - 1):
                if curr:
                    curr = curr.next
            if curr:
                next_part_head = curr.next
                curr.next = None
                curr = next_part_head
            res.append(part_head)
        
        return res
