# Number of Enclaves :-

def numEnclaves(self, grid: List[List[int]]) -> int:
        m, n = len(grid), len(grid[0])
        visited = [[False] * n for _ in range(m)]

        def bfs(i, j):
            queue = deque([(i, j)])
            visited[i][j] = True
            while queue:
                x, y = queue.popleft()
                for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
                    nx, ny = x + dx, y + dy
                    if 0 <= nx < m and 0 <= ny < n and not visited[nx][ny] and grid[nx][ny] == 1:
                        visited[nx][ny] = True
                        queue.append((nx, ny))

        for i in range(m):
            for j in [0, n - 1]:
                if grid[i][j] == 1 and not visited[i][j]:
                    bfs(i, j)

        for j in range(n):
            for i in [0, m - 1]:
                if grid[i][j] == 1 and not visited[i][j]:
                    bfs(i, j)

        result = 0
        for i in range(m):
            for j in range(n):
                if grid[i][j] == 1 and not visited[i][j]:
                    result += 1

        return result
