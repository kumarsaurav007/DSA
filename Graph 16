# Find the City With the Smallest Number of Neighbors at a Threshold Distance :-

def findTheCity(self, n: int, edges: List[List[int]], distanceThreshold: int) -> int:
        dist = [[float('inf')] * n for _ in range(n)]

        for i in range(n):
            dist[i][i] = 0

        for u, v, w in edges:
            dist[u][v] = w
            dist[v][u] = w

        for k in range(n):
            for i in range(n):
                for j in range(n):
                    dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j])

        min_reachable = float('inf')
        result_city = -1

        for i in range(n):
            reachable_count = sum(1 for j in range(n) if dist[i][j] <= distanceThreshold)
            if reachable_count <= min_reachable:
                min_reachable = reachable_count
                result_city = i

        return result_city
