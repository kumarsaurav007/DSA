# 24 Game :-

class Solution:
    def judgePoint24(self, cards: List[int]) -> bool:
        EPS = 1e-6
        
        def backtrack(nums):
            if len(nums) == 1:
                return abs(nums[0] - 24) < EPS

            n = len(nums)
            for i in range(n):
                for j in range(i + 1, n):
                    a, b = nums[i], nums[j]
                    # possible results using two numbers
                    candidates = [
                        a + b,
                        a - b,
                        b - a,
                        a * b,
                    ]
                    if abs(b) > EPS:
                        candidates.append(a / b)
                    if abs(a) > EPS:
                        candidates.append(b / a)

                    # build new list after using nums[i] and nums[j]
                    next_nums = [nums[k] for k in range(n) if k != i and k != j]

                    for val in candidates:
                        if backtrack(next_nums + [val]):
                            return True
            return False

        return backtrack([float(x) for x in cards])  # convert to float
