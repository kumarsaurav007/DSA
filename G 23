# Longest Binary Subsequence Less Than or Equal to K :-

def longestSubsequence(self, s: str, k: int) -> int:
        count = 0
        value = 0
        power = 1  # 2^0 initially

        # Traverse from right to left (LSB to MSB)
        for ch in reversed(s):
            if ch == '0':
                count += 1
            else:
                if power <= k and value + power <= k:
                    value += power
                    count += 1
                # If power exceeds k, no point in continuing with '1's
            power <<= 1
            if power > k:
                break

        # Count remaining '0's on the left
        count += s[:len(s) - count].count('0')

        return count
